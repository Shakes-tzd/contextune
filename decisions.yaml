# Contextune Decisions & Context Preservation System
# Version: 1.0
# Created: 2025-10-28
# Purpose: Central registry for decisions, research, plans, and features
#          with automatic conversation linking and selective context loading

metadata:
  project: "contextune"
  version: "1.0"
  created: "2025-10-28T00:00:00Z"
  last_scan: null
  auto_population_enabled: false  # Will enable in task-1
  description: |
    Unified system for tracking architectural decisions, research findings,
    implementation plans, and feature status with bounded expiration and
    conversation references for context preservation.

conversations:
  scanned_count: 0
  last_scanned_timestamp: null
  sessions_with_decisions: 0
  description: |
    Conversation tracking metadata. Task-1 will populate by scanning
    conversation history and linking decisions to session IDs and
    message history lines.

research:
  # Example entry structure (task-1 will populate with real findings)
  # - id: "res-001"
  #   topic: "Token estimation methodologies"
  #   category: "architecture"  # architecture, performance, tools, integration
  #   findings:
  #     - "Haiku 4.5 costs 87% less than Sonnet for execution tasks"
  #     - "Token-based estimation more accurate than time estimates"
  #     - "Parallel execution with agents enables cost-effective scaling"
  #   methodology: |
  #     Analyzed model pricing, token costs across task types,
  #     and parallelization efficiency with Haiku agents.
  #   sources:
  #     - "Claude pricing documentation"
  #     - "Internal benchmarks"
  #   conversation_link:
  #     session_id: "abc123def456"
  #     timestamp: 1729771380131
  #     prompt: "Research token estimation methodologies"
  #     history_line: 1234
  #   created_at: "2025-10-27T15:00:00Z"
  #   expires_at: "2026-04-27T15:00:00Z"  # 6 months from creation
  #   status: "active"  # active, expired, archived
  #   permanent: false
  description: |
    Research findings with 6-month expiration. Links directly to
    conversation history for reproducibility. Task-1 will extract
    research from conversation logs automatically.
  entries: []

plans:
  # Example entry structure (task-3 will populate from .plans/ directory)
  # - id: "plan-001"
  #   title: "JWT Authentication System"
  #   category: "feature"  # feature, refactor, architecture, integration
  #   description: |
  #     Design and implement JWT-based authentication with
  #     refresh token rotation and secure storage.
  #   design_file: ".plans/jwt-authentication/design.md"
  #   implementation_file: ".plans/jwt-authentication/implementation.md"
  #   status: "design"  # design, approved, in_progress, completed, blocked
  #   phases:
  #     - id: "phase-1"
  #       title: "JWT Implementation"
  #       status: "in_progress"
  #     - id: "phase-2"
  #       title: "Refresh Token Rotation"
  #       status: "planned"
  #   conversation_link:
  #     session_id: "xyz789abc123"
  #     timestamp: 1729771390000
  #     prompt: "Design JWT authentication system"
  #     history_line: 5678
  #   created_at: "2025-10-27T10:00:00Z"
  #   completed_at: null
  #   archived_at: null  # Set to 90 days after completion
  #   related_decisions: ["dec-002", "dec-005"]
  #   owner: null
  description: |
    Implementation plans linked to .plans/ directory files.
    Automatically archived 90 days after completion.
    Task-3 will scan .plans/ and populate this section.
  entries: []

decisions:
  # Example entry structure (multiple tasks will populate)
  # - id: "dec-001"
  #   title: "Use extraction-optimized output format"
  #   date: "2025-10-27T12:00:00Z"
  #   status: "accepted"  # accepted, rejected, pending, revisiting
  #   category: "architecture"  # architecture, process, tooling, performance
  #   context: |
  #     Need consistent, reliable format for automated context
  #     extraction across conversation sessions without manual work.
  #   alternatives_considered:
  #     - option: "Manual file writing"
  #       pros:
  #         - "Immediate control"
  #         - "Explicit file updates"
  #       cons:
  #         - "Violates DRY principle"
  #         - "Redundant tool calls"
  #         - "High maintenance burden"
  #       effort: "medium"
  #       result: "rejected"
  #       rationale: "Too much manual overhead, not scalable"
  #
  #     - option: "Extraction-optimized output format"
  #       pros:
  #         - "Perfect DRY compliance"
  #         - "99%+ extraction reliability"
  #         - "Zero manual work after setup"
  #       cons:
  #         - "Requires specific format discipline"
  #         - "Initial setup complexity"
  #       effort: "small"
  #       result: "accepted"
  #       rationale: "Best long-term solution with minimal overhead"
  #
  #   decision: |
  #     Use extraction-optimized output style for all task outputs.
  #     Ensures consistency, enables automated parsing, eliminates
  #     manual file writing. Format defined in CLAUDE.md patterns.
  #   rationale: |
  #     This approach provides perfect DRY compliance while
  #     maintaining 99% automated extraction reliability.
  #     Once defined, requires only discipline to follow format.
  #     Eliminates need for manual context preservation work.
  #   consequences:
  #     positive:
  #       - "Zero redundant tool calls"
  #       - "Automatic extraction without manual intervention"
  #       - "Better context preservation across sessions"
  #       - "Improved collaboration with future team members"
  #     negative:
  #       - "Must maintain format discipline"
  #       - "Requires training for new contributors"
  #   implementation_status: "completed"
  #   conversation_link:
  #     session_id: "sess-20251027-001"
  #     timestamp: 1729771200000
  #     prompt: "How should we preserve context across sessions?"
  #     history_line: 456
  #   created_at: "2025-10-27T10:30:00Z"
  #   permanent: true
  #   related_features: ["feat-010", "feat-011"]
  #   related_plans: ["plan-005"]
  description: |
    Architectural and process decisions with full ADR structure.
    Includes alternatives, rationale, and consequences.
    Permanent decisions remain indefinitely; others reviewed annually.
    Task-1 will extract decisions from conversation context.
  entries: []

features:
  # Example entry structure (integrated from features.yaml)
  # - id: "feat-001"
  #   title: "Haiku 4.5 Integration"
  #   status: "planned"  # planned, in_progress, completed, blocked
  #   category: "cost-optimization"
  #   priority: "critical"
  #   phase: 1
  #   description: |
  #     Upgrade to explicit Haiku 4.5 model for 87% cost reduction
  #     in intent analysis while improving performance 2-3x.
  #   estimated_tokens: 10000
  #   based_on_decisions: ["dec-010"]  # Link to decisions that drove this
  #   conversation_link:
  #     session_id: "feat-design-20251027"
  #     timestamp: 1729771300000
  #     prompt: "Design cost optimization strategy"
  #     history_line: 789
  #   created_at: "2025-10-27T14:00:00Z"
  #   completed_at: null
  #   notes: |
  #     Cost savings: $200/month (est.)
  #     Performance: 2-3x faster than current
  description: |
    Feature entries automatically integrated from features.yaml.
    Links decisions that drove feature implementation.
    Task-1 will sync with features.yaml to add conversation context.
  entries: []

# Query patterns for selective context loading
# (Used by future CLAUDE.md enhancements for context selection)
query_patterns:
  by_category:
    architecture: "decisions with category=architecture OR plans with category=architecture"
    process: "decisions with category=process"
    tooling: "decisions with category=tooling OR research with category=tools"
    performance: "decisions with category=performance OR research with category=performance"

  by_status:
    active_decisions: "decisions with status=accepted AND permanent=true"
    current_plans: "plans with status!=completed AND status!=archived"
    active_features: "features with status=in_progress OR status=planned"

  by_recency:
    this_month: "entries with created_at > 30 days ago"
    this_quarter: "entries with created_at > 90 days ago"
    this_year: "entries with created_at > 365 days ago"

  by_conversation:
    linked: "entries with conversation_link populated"
    recent_sessions: "entries with conversation_link.timestamp > 7 days ago"

# Lifecycle rules
lifecycle:
  research:
    expiration: "6 months"
    policy: "Auto-expire after 6 months; mark as 'expired' for archival"
    review: "Can be marked 'permanent' for evergreen findings"

  plans:
    completion_archive: "90 days after completion_date"
    policy: "Archived 90 days after marked completed"
    review: "Can be unarchived if needed for reference"

  decisions:
    permanent_threshold: "Major decisions marked permanent=true"
    review_cycle: "Annual review for non-permanent decisions"
    deprecation: "Mark as 'superseded' when replaced by newer decisions"

  features:
    deprecation: "When feature is replaced or removed, mark 'deprecated'"
    archival: "Keep completed features for historical reference"
    review: "Link to decisions that drove feature implementation"

# Indexing metadata
# (For efficient querying and filtering)
indexing:
  by_id: true
  by_category: true
  by_status: true
  by_date: true
  by_conversation_session: true
  full_text_search: false  # Can be enabled in future versions
